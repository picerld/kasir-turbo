// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model TransportType {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  routes Route[]
}

model Operator {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique
  contactInfo String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  routes Route[]
}

model Route {
  id              String   @id @default(uuid()) @db.Uuid
  name            String
  code            String
  description     String?
  transportTypeId String   @db.Uuid
  operatorId      String?  @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  transportType TransportType @relation(fields: [transportTypeId], references: [id])
  operator      Operator?     @relation(fields: [operatorId], references: [id])
  stops         StopRoute[]
  schedules     Schedule[]

  @@index([transportTypeId])
  @@index([operatorId])
}

model Stop {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  latitude  Float
  longitude Float
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  routes       StopRoute[]
  ScheduleStop ScheduleStop[]

  @@index([name])
  @@index([type])
}

model StopRoute {
  id        String   @id @default(uuid()) @db.Uuid
  routeId   String   @db.Uuid
  stopId    String   @db.Uuid
  stopOrder Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  route Route @relation(fields: [routeId], references: [id])
  stop  Stop  @relation(fields: [stopId], references: [id])

  @@unique([routeId, stopId])
  @@index([routeId])
  @@index([stopId])
}

model Schedule {
  id        String   @id @default(uuid())
  routeId   String   @db.Uuid
  startTime DateTime @db.Time()
  endTime   DateTime @db.Time()
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  route Route @relation(fields: [routeId], references: [id])

  @@index([routeId])
  @@index([code])
}

model ScheduleStop {
  id            String   @id @default(uuid())
  scheduleId    String   @db.Uuid
  stopOrder     Int
  arrivalTime   DateTime @db.Time()
  departureTime DateTime @db.Time()
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  stopId        String   @db.Uuid

  stop Stop @relation(fields: [stopId], references: [id])

  @@index([scheduleId])
  @@index([arrivalTime])
  @@index([departureTime])
}
